//// Parent containers


html
{
    height: 100%;
}

head
{
	height:0%;
}

body
{
	height: 100%;
	overflow:hidden;
}

.mainContainer
{
	height: 100%;
}


//// Main page containers


.navContainer
{
	height: 12%;
	width: 100%;
}

.contentContainer
{
	height: 88%;
}


//// Navigation elements


html .navContainer md-content
{
	height:80%;
	width:100%;
	overflow:hidden;
	background: black;
}

.navContainer .md-button
{
	height:50%;
	width:20%;	
}

body > div > div.navContainer.ng-scope > md-content > button.md-raised.rightButton.md-button.md-ink-ripple
{
	position: absolute;
	top: 0px;
	border:black;
	right: 0px;	
	background: inherit;
	color: #FAFAFA;
}

body > div > div.navContainer.ng-scope > md-content > button.md-raised.leftButton.md-button.md-ink-ripple
{  
	position: absolute;
	top: 0px;
	border:black;
	left: 0px; 
	background: inherit;
	color: #FAFAFA;
}


//// Angular view container


.viewContainer
{
	position: relative;
	top: 0px;
	height: 100%;
}


//// Tag input elements

// tag input selectors affect both tagCloud tags-input and song tags-input
html tags-input
{	
	height: 20%;
}

body > div > div.ng-scope > div.ng-scope tags-input > div > div > ul > li
{
	background: #ACACE4;
}

body > div > div.contentContainer.ng-scope .remove-button
{
	font-size: 50px;
}

html tags-input .tags .input
{
	border: 0;
	outline: none;
	margin: 2px;
	padding: 0;
	padding-left: 5px;	
	float: left;
	height: 50px;
	font: 40px "Helvetica Neue", Helvetica, Arial, sans-serif;
}

html tags-input .tags .tag-item
{
	border: 0;
	outline: none;
	margin: 2px;
	padding: 0;
	padding-left: 5px;	
	float: left;
	height: 50px;
	font: 40px "Helvetica Neue", Helvetica, Arial, sans-serif;
}


// Tag radio buttons


.tagFilterSection
{
	height: 10%;
	margin: 0 auto;
	width: 400px;
	text-align: center;

	span
	{
		font-size: 40px;
		font-weight: lighter;
		cursor:pointer;
	}
}

#union-symbol
{ // for some reason, bootstrap has the union symbol, by default, much smaller than the intersection symbol
	font-size:55px;
}

.tagView
{
	height: 70%;
}

input[type="radio"]:checked + span
{
    font-weight: bold;
}

[type='radio'] {
	display: none; 
}

//// Tag cloud / results


.tagCloud
{
	height: 100%; 
	position: relative;
}

.tagResultsContainer
{
	position: relative;
	height:100%;
}

.tagResults
{
	position: relative;
	height: 90%;
	width: 100%;
	margin: 0 auto;
	overflow: scroll;
}

.tagNewButton
{
	text-align: center;
	position: relative;
	height:10%;
	width:100%;	
	background-color: black;
	color:white;
	cursor: pointer;
	font-size:25px;
}

#cloud-dynamic 
{ 
	position:absolute;
	height: 100%;
	width: 100%;
}

//// Search

div.searchSong
{
	position: relative;
	height:7.5%;
}

div.searchSong > form
{
	height: 100%;
}

div.songSearchResults
{
	position: relative;
	height: 42.5%;	
}

div.selectedSongsContainer
{
	height:50%;
}

div.selectedSongsContainer .selectedSongsHeader
{
	position: relative;
	width: 100%;
	height: 15%;

}

div.selectedSongsContainer .selectedSongsHeader label
{
	position: absolute;
	margin: 5px;
}

div.selectedSongs
{
	position: relative;
	height: 85%
}

.searchSong label span
{
	margin-left: 4px;
	font-size: 35px;

	display: inline-block;
	-webkit-transform:rotate(45deg);
}

.md-button.customTagButton
{
	position: absolute;
	right: 0px;
}


//// MISC

.searchSong label
{
	font-size: 30px;
}

.navContainer span
{
	font-size: 30px;
}

.selectedSongsHeader label
{
	font-size: 30px;	
}

body > div > div.contentContainer.ng-scope > div.viewContainer.ng-scope > tags-input > div > div
{
	overflow: scroll;
}


// General

.songCard
{
	font-weight: bold;
	cursor: pointer;
	text-align: center;
	margin: 0 auto;
}

.loadingContainer
{
    position:fixed;
    padding:0;
    margin:0;
    color: #FAFAFA;

    top:0;
    left:0;

    width: 100%;
    height: 100%;
    background:rgba(255,255,255,0.5);

    font-size: 22px;
    text-align: center;
    z-index: 100000;
}

.ui-grid {
	position: absolute;
	height: auto;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
}

.grid-align
{
	text-align: center;
}

div.ui-grid-cell
{
	position: relative;
}

.songCell
{
	cursor:pointer;
	text-decoration: underline;
}